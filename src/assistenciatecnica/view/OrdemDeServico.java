/*
 * OrdemDeServico.java
 * 
 * Copyright © 2014 Rogério Eduardo Pereira <rogeriopereira.info@gmail.com>. 
 * 
 * This file is part of AssistenciaTecnica.
 * 
 * AssistenciaTecnica is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * AssistenciaTecnica is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with AssistenciaTecnica.  If not, see <http ://www.gnu.org/licenses/>.
 */

package assistenciatecnica.view;

import assistenciatecnica.control.ControladorAtendimentos;
import assistenciatecnica.control.ControladorBancodeDados;
import assistenciatecnica.control.ControladorClientes;
import assistenciatecnica.control.ControladorOS;
import assistenciatecnica.control.ControladorPagamentos;
import assistenciatecnica.control.ControladorPeca;
import assistenciatecnica.control.ControladorRelatorios;
import assistenciatecnica.control.ControladorServico;
import assistenciatecnica.control.ControladorUsuario;
import assistenciatecnica.control.util.ControladorTabelas;
import assistenciatecnica.model.Clientes;
import assistenciatecnica.model.OrdemServico;
import assistenciatecnica.model.Pecas;
import assistenciatecnica.model.PecasOs;
import assistenciatecnica.model.ServicoOs;
import assistenciatecnica.model.Servicos;
import assistenciatecnica.model.Usuario;
import java.awt.Component;
import java.awt.Container;
import java.awt.Toolkit;
import java.awt.event.ContainerEvent;
import java.awt.event.ContainerListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rogério Eduardo Pereira
 * Data Criação: Jun 20, 2014
 */
public class OrdemDeServico extends javax.swing.JFrame implements KeyListener, ContainerListener
{

    /** Creates new form OrdemDeServico */
    public OrdemDeServico() {
        initComponents();

        //Adiciona Listeners de Botões
        addKeyAndContainerListenerRecursively(this);

        this.setLocationRelativeTo(null);

        textoCodigo.setText("** NOVO **");
        alteraStatus();

        this.getAtendimentos();
        this.getPagamentos();
        this.pagamentoVisible(false, false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        PainelCodigo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textoCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textoStatus = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textoAbertura = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        textoFechamento = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        textoEntrega = new javax.swing.JTextField();
        labelPagamento = new javax.swing.JLabel();
        comboPagamento = new javax.swing.JComboBox<>();
        textoParcelas = new javax.swing.JFormattedTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        botaoClienteAdicionar = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        textoCliente = new javax.swing.JTextField();
        botaoProcurarCliente = new javax.swing.JButton();
        botaoAdicionarCliente = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textoDefeito = new javax.swing.JTextArea();
        textoTecnico = new javax.swing.JTextField();
        botaoProcurarTecnico = new javax.swing.JButton();
        botaoAdicionarTecnico = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        textoEquipamento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textoModelo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textoNumeroSerie = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        comboAtendimento = new javax.swing.JComboBox();
        painelPeças = new javax.swing.JPanel();
        botaoAdicionarPeca = new javax.swing.JButton();
        botaoRemoverPeca = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaPecas = new javax.swing.JTable();
        painelServicos = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaServicos = new javax.swing.JTable();
        botaoAdicionarServico = new javax.swing.JButton();
        botaoRemoverServico = new javax.swing.JButton();
        painelObservacoes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoObservacoes = new javax.swing.JTextArea();
        PainelRecebimentos = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textoDesconto = new formattedFields.jTextMoeda();
        textoTotal = new formattedFields.jTextMoeda();
        textoValorFinal = new formattedFields.jTextMoeda();
        textoPorcentagemDesconto = new javax.swing.JFormattedTextField();
        botaoSalvar = new javax.swing.JButton();
        botaoProcurar = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        botaoApagar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuImprimir = new javax.swing.JMenu();
        menuImprimirAbertura = new javax.swing.JMenuItem();
        menuImprimirFechamento = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ordem de Serviço");

        PainelCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(95, 133, 169), null), "Código", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Codigo");

        textoCodigo.setEditable(false);
        textoCodigo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        textoCodigo.setForeground(java.awt.Color.red);
        textoCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoCodigo.setFocusable(false);

        jLabel2.setText("Status");

        textoStatus.setEditable(false);
        textoStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        textoStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoStatus.setFocusable(false);
        textoStatus.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                textoStatusMouseClicked(evt);
            }
        });
        textoStatus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                textoStatusActionPerformed(evt);
            }
        });

        jLabel16.setText("Abertura");

        textoAbertura.setEditable(false);
        textoAbertura.setFocusable(false);

        jLabel17.setText("Fechamento");

        textoFechamento.setEditable(false);
        textoFechamento.setFocusable(false);

        jLabel18.setText("Entrega");
        jLabel18.setToolTipText("");

        textoEntrega.setEditable(false);
        textoEntrega.setFocusable(false);

        labelPagamento.setText("Pagamento");

        comboPagamento.setMaximumSize(new java.awt.Dimension(175, 25));
        comboPagamento.setMinimumSize(new java.awt.Dimension(175, 25));
        comboPagamento.setPreferredSize(new java.awt.Dimension(175, 25));
        comboPagamento.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                comboPagamentoItemStateChanged(evt);
            }
        });

        textoParcelas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout PainelCodigoLayout = new javax.swing.GroupLayout(PainelCodigo);
        PainelCodigo.setLayout(PainelCodigoLayout);
        PainelCodigoLayout.setHorizontalGroup(
            PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel1)
                    .addComponent(jLabel18))
                .addGap(31, 31, 31)
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textoCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(textoAbertura)
                    .addComponent(textoEntrega))
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelCodigoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel2)))
                    .addGroup(PainelCodigoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(labelPagamento)))
                .addGap(24, 24, 24)
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoStatus)
                    .addComponent(textoFechamento)
                    .addGroup(PainelCodigoLayout.createSequentialGroup()
                        .addComponent(comboPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoParcelas)))
                .addContainerGap())
        );
        PainelCodigoLayout.setVerticalGroup(
            PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textoStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(textoAbertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(textoFechamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(textoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPagamento)
                    .addComponent(comboPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("Cliente");

        textoCliente.setEditable(false);
        textoCliente.setFocusable(false);

        botaoProcurarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/edit-user-green_menor_buscar.png"))); // NOI18N
        botaoProcurarCliente.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoProcurarClienteActionPerformed(evt);
            }
        });

        botaoAdicionarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/edit-user-green_menor_add.png"))); // NOI18N
        botaoAdicionarCliente.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoAdicionarClienteActionPerformed(evt);
            }
        });

        jLabel4.setForeground(java.awt.Color.red);
        jLabel4.setText("Técnico");

        jLabel8.setForeground(java.awt.Color.red);
        jLabel8.setText("Defeito");

        textoDefeito.setColumns(20);
        textoDefeito.setLineWrap(true);
        textoDefeito.setWrapStyleWord(true);
        jScrollPane2.setViewportView(textoDefeito);

        textoTecnico.setEditable(false);
        textoTecnico.setFocusable(false);

        botaoProcurarTecnico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/edit-user-black_menor_buscar.png"))); // NOI18N
        botaoProcurarTecnico.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoProcurarTecnicoActionPerformed(evt);
            }
        });

        botaoAdicionarTecnico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/edit-user-black_menor_add.png"))); // NOI18N
        botaoAdicionarTecnico.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoAdicionarTecnicoActionPerformed(evt);
            }
        });

        jLabel5.setForeground(java.awt.Color.red);
        jLabel5.setText("Equipamento");

        jLabel6.setText("Modelo");

        jLabel7.setText("Numero Série");

        jLabel15.setForeground(java.awt.Color.red);
        jLabel15.setText("Atendimento");

        javax.swing.GroupLayout botaoClienteAdicionarLayout = new javax.swing.GroupLayout(botaoClienteAdicionar);
        botaoClienteAdicionar.setLayout(botaoClienteAdicionarLayout);
        botaoClienteAdicionarLayout.setHorizontalGroup(
            botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                        .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel15))
                        .addGap(10, 10, 10)
                        .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoCliente)
                                    .addComponent(textoTecnico))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                                        .addComponent(botaoProcurarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoAdicionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                                        .addComponent(botaoProcurarTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(botaoAdicionarTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(textoEquipamento)
                            .addComponent(textoModelo)
                            .addComponent(textoNumeroSerie)
                            .addComponent(comboAtendimento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 569, Short.MAX_VALUE)))
                .addContainerGap())
        );
        botaoClienteAdicionarLayout.setVerticalGroup(
            botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botaoClienteAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoAdicionarCliente)
                    .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(textoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoProcurarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(textoTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoProcurarTecnico)
                    .addComponent(botaoAdicionarTecnico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(comboAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(botaoClienteAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textoNumeroSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ordem de Serviço", botaoClienteAdicionar);

        botaoAdicionarPeca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/input-mouse-2_menor_add.png"))); // NOI18N
        botaoAdicionarPeca.setText("Adicionar Peça");
        botaoAdicionarPeca.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoAdicionarPecaActionPerformed(evt);
            }
        });

        botaoRemoverPeca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/input-mouse-2_menor_remove.png"))); // NOI18N
        botaoRemoverPeca.setText("Remover Peça");
        botaoRemoverPeca.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoRemoverPecaActionPerformed(evt);
            }
        });

        tabelaPecas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Codigo", "Peça", "Valor", "Quantidade", "Desconto", "Total"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabelaPecas.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                tabelaPecasKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaPecas);

        javax.swing.GroupLayout painelPeçasLayout = new javax.swing.GroupLayout(painelPeças);
        painelPeças.setLayout(painelPeçasLayout);
        painelPeçasLayout.setHorizontalGroup(
            painelPeçasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPeçasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPeçasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(painelPeçasLayout.createSequentialGroup()
                        .addComponent(botaoAdicionarPeca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoRemoverPeca)))
                .addContainerGap())
        );
        painelPeçasLayout.setVerticalGroup(
            painelPeçasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPeçasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPeçasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionarPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRemoverPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Peças", painelPeças);

        tabelaServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Codigo", "Serviço", "Valor", "Desconto", "Total"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabelaServicos.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                tabelaServicosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaServicos);

        botaoAdicionarServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/chardevice_add.png"))); // NOI18N
        botaoAdicionarServico.setText("Adicionar Serviço");
        botaoAdicionarServico.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoAdicionarServicoActionPerformed(evt);
            }
        });

        botaoRemoverServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/chardevice_delete.png"))); // NOI18N
        botaoRemoverServico.setText("Remover Serviço");
        botaoRemoverServico.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoRemoverServicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelServicosLayout = new javax.swing.GroupLayout(painelServicos);
        painelServicos.setLayout(painelServicosLayout);
        painelServicosLayout.setHorizontalGroup(
            painelServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelServicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(painelServicosLayout.createSequentialGroup()
                        .addComponent(botaoAdicionarServico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoRemoverServico)))
                .addContainerGap())
        );
        painelServicosLayout.setVerticalGroup(
            painelServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelServicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionarServico, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRemoverServico, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Serviços", painelServicos);

        textoObservacoes.setColumns(20);
        textoObservacoes.setLineWrap(true);
        textoObservacoes.setWrapStyleWord(true);
        jScrollPane1.setViewportView(textoObservacoes);

        javax.swing.GroupLayout painelObservacoesLayout = new javax.swing.GroupLayout(painelObservacoes);
        painelObservacoes.setLayout(painelObservacoesLayout);
        painelObservacoesLayout.setHorizontalGroup(
            painelObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                .addContainerGap())
        );
        painelObservacoesLayout.setVerticalGroup(
            painelObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Observações", painelObservacoes);

        PainelRecebimentos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Recebimentos", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel10.setText("Valor Total");

        jLabel12.setText("Valor Final");

        jLabel13.setText("Desconto");

        jLabel14.setText("Porcentagem Desconto");

        textoDesconto.setEditable(false);
        textoDesconto.setFocusable(false);

        textoTotal.setEditable(false);
        textoTotal.setFocusable(false);

        textoValorFinal.setEditable(false);
        textoValorFinal.setFocusable(false);

        textoPorcentagemDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00 %"))));
        textoPorcentagemDesconto.setText("0,00 %");
        textoPorcentagemDesconto.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                textoPorcentagemDescontoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout PainelRecebimentosLayout = new javax.swing.GroupLayout(PainelRecebimentos);
        PainelRecebimentos.setLayout(PainelRecebimentosLayout);
        PainelRecebimentosLayout.setHorizontalGroup(
            PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelRecebimentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textoTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(textoDesconto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoValorFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textoPorcentagemDesconto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelRecebimentosLayout.setVerticalGroup(
            PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelRecebimentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(textoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(textoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(textoPorcentagemDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelRecebimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textoValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/accept.png"))); // NOI18N
        botaoSalvar.setText("Salvar");
        botaoSalvar.setMaximumSize(new java.awt.Dimension(150, 32));
        botaoSalvar.setMinimumSize(new java.awt.Dimension(150, 32));
        botaoSalvar.setPreferredSize(new java.awt.Dimension(150, 32));
        botaoSalvar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoProcurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/magnifier.png"))); // NOI18N
        botaoProcurar.setText("Procurar");
        botaoProcurar.setMaximumSize(new java.awt.Dimension(150, 32));
        botaoProcurar.setMinimumSize(new java.awt.Dimension(150, 32));
        botaoProcurar.setPreferredSize(new java.awt.Dimension(150, 32));
        botaoProcurar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoProcurarActionPerformed(evt);
            }
        });

        botaoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/pencil.png"))); // NOI18N
        botaoEditar.setText("Editar");
        botaoEditar.setMaximumSize(new java.awt.Dimension(150, 32));
        botaoEditar.setMinimumSize(new java.awt.Dimension(150, 32));
        botaoEditar.setPreferredSize(new java.awt.Dimension(150, 32));

        botaoApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/edit-delete-2.png"))); // NOI18N
        botaoApagar.setText("Apagar");
        botaoApagar.setMaximumSize(new java.awt.Dimension(150, 32));
        botaoApagar.setMinimumSize(new java.awt.Dimension(150, 32));
        botaoApagar.setPreferredSize(new java.awt.Dimension(150, 32));
        botaoApagar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botaoApagarActionPerformed(evt);
            }
        });

        menuImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assistenciatecnica/view/img/printer-5.png"))); // NOI18N
        menuImprimir.setText("Imprimir");

        menuImprimirAbertura.setText("Abertura");
        menuImprimirAbertura.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuImprimirAberturaActionPerformed(evt);
            }
        });
        menuImprimir.add(menuImprimirAbertura);

        menuImprimirFechamento.setText("Fechamento");
        menuImprimirFechamento.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuImprimirFechamentoActionPerformed(evt);
            }
        });
        menuImprimir.add(menuImprimirFechamento);

        jMenuBar1.add(menuImprimir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(PainelRecebimentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PainelCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoApagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PainelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PainelRecebimentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoAdicionarClienteActionPerformed
    {//GEN-HEADEREND:event_botaoAdicionarClienteActionPerformed
		CadastroClientes cc = new CadastroClientes();
		cc.setVisible(true);
    }//GEN-LAST:event_botaoAdicionarClienteActionPerformed

    private void botaoAdicionarTecnicoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoAdicionarTecnicoActionPerformed
    {//GEN-HEADEREND:event_botaoAdicionarTecnicoActionPerformed
		CadastroUsuario cu = new CadastroUsuario();
		cu.setVisible(true);
    }//GEN-LAST:event_botaoAdicionarTecnicoActionPerformed

    private void botaoProcurarClienteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoProcurarClienteActionPerformed
    {//GEN-HEADEREND:event_botaoProcurarClienteActionPerformed
		ProcuraClientes pc = new ProcuraClientes(this, true);
		pc.setVisible(true);
    }//GEN-LAST:event_botaoProcurarClienteActionPerformed

    private void botaoProcurarTecnicoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoProcurarTecnicoActionPerformed
    {//GEN-HEADEREND:event_botaoProcurarTecnicoActionPerformed
        ProcurarUsuarios pu = new ProcurarUsuarios(this, true);
		pu.setVisible(true);
    }//GEN-LAST:event_botaoProcurarTecnicoActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoSalvarActionPerformed
    {//GEN-HEADEREND:event_botaoSalvarActionPerformed
        somaValores();
        
        OrdemServico            os  = new OrdemServico();
        SimpleDateFormat        sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        Calendar                cal = Calendar.getInstance();
        ControladorBancodeDados bd  = new ControladorBancodeDados();
        
        os.setStatus(textoStatus.getText());
        
        os.setCliente(cliente);
        os.setTecnico(tecnico);
        os.setEquipamento(textoEquipamento.getText());
        os.setModelo(textoModelo.getText());
        os.setNumeroSerie(textoNumeroSerie.getText());
        os.setDefeito(textoDefeito.getText());
        os.setObservacao(textoObservacoes.getText());
        os.setValor(textoTotal.getValue());
        os.setDesconto(textoDesconto.getValue());
        os.setPorcentagemDesconto(Double.parseDouble(textoPorcentagemDesconto.getText().replace(" %", "").replace(",", ".")));
        os.setValorFinal(textoValorFinal.getValue());
        
        //Datas
        try {
            //Abertura
            cal.setTime(sdf.parse(textoAbertura.getText()));
            os.setAbertura(cal);
            
            //Fechamento
            if(!textoFechamento.getText().isEmpty())
            {
                cal.setTime(sdf.parse(textoFechamento.getText()));
                os.setFechamento(cal);
            }
            
            //Entrega
            if(!textoEntrega.getText().isEmpty())
            {
                cal.setTime(sdf.parse(textoEntrega.getText()));
                os.setEntrega(cal);
            }
        }
        catch (ParseException ex) {
            
        }
        
        //Pagamento
        if(comboPagamento.getSelectedIndex() != -1)
        {
            os.setPagamento(new ControladorPagamentos().getPagamentoByNome(comboPagamento.getSelectedItem().toString()));
            os.setParcelasPagamento(Integer.parseInt(textoParcelas.getText()));
        }
        
        //Atendimento
        os.setAtendimento(new ControladorAtendimentos().getAtendimentoByNome(comboAtendimento.getSelectedItem().toString()));
        
        //Pagamento
        if(comboPagamento.getSelectedIndex() > 0)
            os.setPagamento(new ControladorPagamentos().getPagamentoByNome(comboPagamento.getSelectedItem().toString()));
        if(!textoParcelas.getText().isEmpty())
            os.setParcelasPagamento(Integer.parseInt(textoParcelas.getText()));
        
        //Peças
        Collection<PecasOs> pecas = new ArrayList<PecasOs>();
        for(int i=0; i<tabelaPecas.getRowCount(); i++)
        {
            PecasOs peca = new PecasOs();
            peca.setPeca(new ControladorPeca().getPecaByCodigo(Long.parseLong(tabelaPecas.getValueAt(i, 0).toString()), this));
            peca.setValor(Double.parseDouble(tabelaPecas.getValueAt(i, 2).toString().replace("R$ ", "").replace(".", "").replace(",", ".")));
            peca.setQuantidade(Integer.parseInt(tabelaPecas.getValueAt(i, 3).toString()));
            peca.setDesconto(Double.parseDouble(tabelaPecas.getValueAt(i, 4).toString().replace("R$ ", "").replace(".", "").replace(",", ".")));
            pecas.add(peca);
        }
        os.setPecas(pecas);
        
        //Serviços
        Collection<ServicoOs> servicos = new ArrayList<ServicoOs>();
        for(int i=0; i<tabelaServicos.getRowCount(); i++)
        {
            ServicoOs servico = new ServicoOs();
            servico.setServico(new ControladorServico().getServicoByCodigo(Long.parseLong(tabelaServicos.getValueAt(i, 0).toString()), this));
            servico.setValor(Double.parseDouble(tabelaServicos.getValueAt(i, 2).toString().replace("R$ ", "").replace(".", "").replace(",", ".")));
            servico.setDesconto(Double.parseDouble(tabelaServicos.getValueAt(i, 3).toString().replace("R$ ", "").replace(".", "").replace(",", ".")));
            servicos.add(servico);
        }
        os.setServicos(servicos);
        
        if(!textoCodigo.getText().equals("** NOVO **"))
        {
            os.setCodigo(Long.parseLong(textoCodigo.getText()));
            bd.atualizar(os, this);
        }
        else
        {
            bd.cadastrar(os, this);
        }
        
        //Abertura
        if(textoStatus.getText().equals("Em Abertura") || textoStatus.getText().equals("Em análise"))
            imprimir("relatorios/OS_Abertura.jasper");
        //Fechamento"
        else
            imprimir("relatorios/OS_Fechamento.jasper");
            
        limpaTela();  
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void textoStatusMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_textoStatusMouseClicked
    {//GEN-HEADEREND:event_textoStatusMouseClicked
        alteraStatus();
    }//GEN-LAST:event_textoStatusMouseClicked

    private void textoStatusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_textoStatusActionPerformed
    {//GEN-HEADEREND:event_textoStatusActionPerformed
        alteraStatus();
    }//GEN-LAST:event_textoStatusActionPerformed

    private void botaoAdicionarPecaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoAdicionarPecaActionPerformed
    {//GEN-HEADEREND:event_botaoAdicionarPecaActionPerformed
        ProcurarPecas j = new ProcurarPecas();
        j.setJanela(this);
        j.setVisible(true);
    }//GEN-LAST:event_botaoAdicionarPecaActionPerformed

    private void botaoRemoverPecaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoRemoverPecaActionPerformed
    {//GEN-HEADEREND:event_botaoRemoverPecaActionPerformed
        ControladorTabelas.removerLinhaTabela(this.tabelaPecas);
    }//GEN-LAST:event_botaoRemoverPecaActionPerformed

    private void botaoRemoverServicoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoRemoverServicoActionPerformed
    {//GEN-HEADEREND:event_botaoRemoverServicoActionPerformed
        ControladorTabelas.removerLinhaTabela(this.tabelaServicos);
    }//GEN-LAST:event_botaoRemoverServicoActionPerformed

    private void tabelaPecasKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tabelaPecasKeyPressed
    {//GEN-HEADEREND:event_tabelaPecasKeyPressed
        //TECLA ENTER
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            calculaValoresTabela(tabelaPecas);
        }
    }//GEN-LAST:event_tabelaPecasKeyPressed

    private void tabelaServicosKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tabelaServicosKeyPressed
    {//GEN-HEADEREND:event_tabelaServicosKeyPressed
        //TECLA ENTER
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            calculaValoresTabela(tabelaServicos);
        }
    }//GEN-LAST:event_tabelaServicosKeyPressed

    private void botaoAdicionarServicoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoAdicionarServicoActionPerformed
    {//GEN-HEADEREND:event_botaoAdicionarServicoActionPerformed
        ProcurarServico j = new ProcurarServico();
        j.setJanela(this);
        j.setVisible(true);
    }//GEN-LAST:event_botaoAdicionarServicoActionPerformed

    private void textoPorcentagemDescontoFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_textoPorcentagemDescontoFocusLost
    {//GEN-HEADEREND:event_textoPorcentagemDescontoFocusLost
        calculaPorcentagemDesconto();
    }//GEN-LAST:event_textoPorcentagemDescontoFocusLost

    private void comboPagamentoItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_comboPagamentoItemStateChanged
    {//GEN-HEADEREND:event_comboPagamentoItemStateChanged
        if(comboPagamento.getSelectedIndex()> -1)
        {
            if(comboPagamento.getSelectedItem().toString().contains("CRÉDITO"))
                this.pagamentoVisible(true, true);
            else
                this.pagamentoVisible(true, false);
        }
    }//GEN-LAST:event_comboPagamentoItemStateChanged

    private void botaoProcurarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoProcurarActionPerformed
    {//GEN-HEADEREND:event_botaoProcurarActionPerformed
        new ProcuraOS(this, true).setVisible(true);
    }//GEN-LAST:event_botaoProcurarActionPerformed

    private void botaoApagarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botaoApagarActionPerformed
    {//GEN-HEADEREND:event_botaoApagarActionPerformed
        new ControladorBancodeDados().apagar(Long.parseLong(textoCodigo.getText()), new OrdemServico(), this);
        limpaTela();
    }//GEN-LAST:event_botaoApagarActionPerformed

    private void menuImprimirAberturaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuImprimirAberturaActionPerformed
    {//GEN-HEADEREND:event_menuImprimirAberturaActionPerformed
        imprimir("relatorios/OS_Abertura.jasper");
    }//GEN-LAST:event_menuImprimirAberturaActionPerformed

    private void menuImprimirFechamentoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuImprimirFechamentoActionPerformed
    {//GEN-HEADEREND:event_menuImprimirFechamentoActionPerformed
        imprimir("relatorios/OS_Fechamento.jasper");
    }//GEN-LAST:event_menuImprimirFechamentoActionPerformed


    /*
     * Métodos da Classe
     */
    
    //METODOS KEYLISTENER
    //KEYLISTENER RECURSIVO (COLOCA EM TODOS OS COMPONENTES)
    private void addKeyAndContainerListenerRecursively(Component c) 
    {  
        try 
        {  
            c.addKeyListener(this);  
            if (c instanceof Container) 
            {  
                Container cont = (Container) c;  
                cont.addContainerListener(this);  
                Component[] children = cont.getComponents();  
                for (int i = 0; i < children.length; i++) 
                {  
                    addKeyAndContainerListenerRecursively(children[i]);  
                }  
            }  
        } catch (Exception e) {  
            //Anuncie Aqui  
        }  
    }  

    //EVENTOS KEYLISTENER
    public void keyTyped(KeyEvent e) {}  
    public void keyReleased(KeyEvent e) {}  
    public void componentAdded(ContainerEvent e) {}  
    public void componentRemoved(ContainerEvent e) {}  
    public void keyPressed(KeyEvent e) 
    {
        //TECLA ENTER
        if(e.getKeyCode() == KeyEvent.VK_ENTER)
        {

        }

        //TECLA ESC
        if(e.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            this.Fechar();
        }
    }
    
    
    /*
     * Método Fechar()
     * Fecha Janela
     */
    private void Fechar()
    {
        this.dispose();
    }
	
	/*
	 * Método getAtendimentos
	 * Obtem todos os atendimentos cadastrados e insere no combobox
	 */
	private void getAtendimentos()
	{
		List<String> atendimentos = new ControladorAtendimentos().getAtendimentos();
		this.comboAtendimento.addItem("");
		for(String atendimento : atendimentos)
			this.comboAtendimento.addItem(atendimento.toString());
	}
    
    /*
	 * Método getPagamentos
	 * Obtem todos os modos de pagamento cadastrados e insere no combobox
	 */
	private void getPagamentos()
	{
		List<String> pagamentos = new ControladorPagamentos().getPagamentos();
		this.comboPagamento.addItem("");
		for(String pagamento : pagamentos)
			this.comboPagamento.addItem(pagamento.toString());
	}
    
    private void pagamentoVisible(boolean campo, boolean parcela)
    {
        textoParcelas.setText(null);        
        this.labelPagamento.setVisible(campo);
        this.comboPagamento.setVisible(campo);
        this.textoParcelas.setVisible(parcela);
        invalidate();
        validate();
    }
	
	/*
	 * Método getClienteByCodigo
	 * Obtem o cliente pelo Codigo
	 */
	public void getClienteByCodigo(Long codigo)
	{
		this.cliente	= new ControladorClientes().getClientesByCodigo(codigo, this);
		this.textoCliente.setText(this.cliente.getNome());
	}
    
    /*
	 * Método getClienteByCodigo
	 * Obtem o cliente pelo Codigo
	 */
	public void getUsuarioByCodigo(Long codigo)
	{
		this.tecnico	= new ControladorUsuario().getUsuarioByCod(codigo, this);
		this.textoTecnico.setText(this.tecnico.getNome());
	}
    
    /**
     * 
     * @param campo Campo para ser setado a data Atual (1 = Abertura; 2 = Fechamento; 3 = Finalização)
     */
    private void setDataAtual(int campo)
    {
        Timestamp timestamp = new Timestamp(System.currentTimeMillis()); 
        String date = new SimpleDateFormat("dd/MM/yyyy HH:mm").format(timestamp.getTime());
        
        if(campo ==  1)
        {
            textoAbertura.setText(date);
            textoFechamento.setText("");
            textoEntrega.setText("");
        }
        else if(campo == 2)
        {
            textoFechamento.setText(date);
            textoEntrega.setText("");
        }
        else if(campo == 3)
        {
            textoEntrega.setText(date);
        }
    }
    
    private void alteraStatus()
    {
        comboPagamento.setSelectedIndex(-1);
        pagamentoVisible(false, false);
        if(textoCodigo.getText().equals("** NOVO **"))
        {
            setDataAtual(1);

            textoStatus.setText("Em Abertura");
        }
        else
        {
            if(textoStatus.getText().equals("") || textoStatus.getText().equals("Entregue"))
            {
                if(textoCodigo.getText().equals("** NOVO **"))
                    setDataAtual(1);

                textoStatus.setText("Em Abertura");
            }
            else if(textoStatus.getText().equals("Em Abertura"))
                textoStatus.setText("Em análise");
            else if(textoStatus.getText().equals("Em análise"))
            {
                setDataAtual(2);
                textoStatus.setText("Fechado");
            }
            else if(textoStatus.getText().equals("Fechado"))
            {
                setDataAtual(3);
                textoStatus.setText("Entregue");
                pagamentoVisible(true, false);
            }
        }
    }
    
    public void insertProduto(Long codigo)
    {
		ControladorPeca controladorPecas    = new ControladorPeca();
		Pecas           peca                = controladorPecas.getPecaByCodigo(codigo, this);
		
		DecimalFormat fmt = new DecimalFormat("#,##0.00");   //limita o número de casas decimais
		String valor = "R$ "+fmt.format(peca.getValor());
        
        DefaultTableModel modelo = (DefaultTableModel) this.tabelaPecas.getModel();
        modelo.addRow(new String[]	{
                                    peca.getCodigo().toString(),
                                    peca.getPeca(),
                                    valor,
                                    "1",
                                    "R$ 0,00"
                                });
		
		controladorPecas = null;
        
        calculaValoresTabela(tabelaPecas);
    }
    
    public void insertServico(Long codigo)
    {
        ControladorServico  controladorServico  = new ControladorServico();
		Servicos            servico             = controladorServico.getServicoByCodigo(codigo, this);
		
		DecimalFormat fmt = new DecimalFormat("#,##0.00");   //limita o número de casas decimais
		String valor = "R$ "+fmt.format(servico.getValor());
        
        DefaultTableModel modelo = (DefaultTableModel) this.tabelaServicos.getModel();
        modelo.addRow(new String[]	{
                                    servico.getCodigo().toString(),
                                    servico.getServico(),
                                    valor,
                                    "R$ 0,00"
                                });
		
		controladorServico = null;
        
        calculaValoresTabela(tabelaServicos);
    }
    
    private void calculaValoresTabela(JTable tabela)
    {
        DecimalFormat fmt = new DecimalFormat("#,##0.00");   //limita o número de casas decimais
        
        for(int i=0; i<tabela.getRowCount(); i++)
        {
            int     quantidade  = 1;
            double  valor       = Double.parseDouble(tabela.getValueAt(i, 2).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
            double  desconto = 0.0;
            double  total;
            
            if(tabela == tabelaPecas)
            {
                desconto    = Double.parseDouble(tabela.getValueAt(i, 4).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
                quantidade  = Integer.parseInt(tabela.getValueAt(i, 3).toString());
            
                total = (valor * quantidade) - desconto;
                
                tabela.setValueAt("R$ "+fmt.format(total), i, 5);
            }
            else if(tabela == tabelaServicos)
            {
                desconto = Double.parseDouble(tabela.getValueAt(i, 3).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
            
                total = (valor * quantidade) - desconto;
                
                tabela.setValueAt("R$ "+fmt.format(total), i, 4);
            }
        }
        
        somaValores();
    }
    
    private void somaValores()
    {
        int     quantidade      = 0;
        double  valorItem       = 0.0;
        double  valoresTotal    = 0.0;
        double  descontos       = 0.0;
        double  valorFinal      = 0.0;
                    
        for(int i=0; i<tabelaPecas.getRowCount(); i++)
        {
            valorItem       = Double.parseDouble(tabelaPecas.getValueAt(i, 2).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
            quantidade      = Integer.parseInt(tabelaPecas.getValueAt(i, 3).toString());
            
            valoresTotal    = valoresTotal + (valorItem * quantidade);
            descontos       = descontos + Double.parseDouble(tabelaPecas.getValueAt(i, 4).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
        }
        
        for(int i=0; i<tabelaServicos.getRowCount(); i++)
        {
            valoresTotal    = valoresTotal + Double.parseDouble(tabelaServicos.getValueAt(i, 2).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
            descontos       = descontos + Double.parseDouble(tabelaServicos.getValueAt(i, 3).toString().replace("R$ ", "").replace(".", "").replace(",", "."));
        }
        
        textoTotal.setText(valoresTotal);
        textoDesconto.setText(descontos);
        textoValorFinal.setText(valoresTotal - descontos);
        
        calculaPorcentagemDesconto();
    }
    
    public void calculaPorcentagemDesconto()
    {
        if(!textoPorcentagemDesconto.getText().isEmpty())
        {
            double desconto;
            double total;

            if(!textoPorcentagemDesconto.getText().contains(" %"))
                textoPorcentagemDesconto.setText(textoPorcentagemDesconto.getText() + " %");

            desconto = Double.parseDouble(textoPorcentagemDesconto.getText().replace(" %", "").replace(",", "."));
            desconto = desconto/100;

            try {
                total = textoValorFinal.getValue();
                total = total - (total * desconto);

                textoValorFinal.setText(total);
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Não há nenhum valor!", "Erro", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("img/error-circle.png"));
                textoPorcentagemDesconto.setText(null);
            }
        }
    }
    
    public void buscaOS(Long codigo)
    {
        this.os = new ControladorOS().getOSByCodigo(codigo, this);
        
        SimpleDateFormat        sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        
        DecimalFormat fmt = new DecimalFormat("#,##0.00");   //limita o número de casas decimais
        
        String fechamento   = "";
        String entrega      = "";

        if(os.getFechamento() != null)
            fechamento = sdf.format(os.getFechamento().getTime());
        if(os.getEntrega() != null)
        {
            entrega = sdf.format(os.getEntrega().getTime());
            if(os.getPagamento().getPagamento().contains("Crédito"))
                pagamentoVisible(true, true);
            else
                pagamentoVisible(true, false);
        }
        
        textoCodigo.setText(os.getCodigo().toString());
        textoStatus.setText(os.getStatus());
        textoAbertura.setText(sdf.format(os.getAbertura().getTime()));
        textoFechamento.setText(fechamento);
        textoEntrega.setText(entrega);
        comboPagamento.setSelectedItem(os.getPagamento().getPagamento());
        textoParcelas.setText(String.valueOf(os.getParcelasPagamento()));
        
        this.getClienteByCodigo(os.getCliente().getCodigo());
        this.getUsuarioByCodigo(os.getTecnico().getCodigo());
        comboAtendimento.setSelectedItem(os.getAtendimento().getAtendimento());
        textoEquipamento.setText(os.getEquipamento());
        textoModelo.setText(os.getModelo());
        textoNumeroSerie.setText(os.getNumeroSerie());
        textoDefeito.setText(os.getDefeito());
        
        textoPorcentagemDesconto.setText(String.valueOf(os.getPorcentagemDesconto())+" %");
        
        textoObservacoes.setText(os.getObservacao());
        
        for(PecasOs peca: os.getPecas())
        {
            double total = (peca.getValor() * peca.getQuantidade())-peca.getDesconto();
            
            DefaultTableModel modelo = (DefaultTableModel) tabelaPecas.getModel();
			modelo.addRow(new String[]	{
											String.valueOf(peca.getPeca().getCodigo()),
                                            peca.getPeca().getPeca(),
                                            "R$ "+fmt.format(peca.getValor()),
                                            String.valueOf(peca.getQuantidade()),
                                            "R$ "+fmt.format(peca.getDesconto()),
                                            "R$ "+fmt.format(total)
										});
        }
        
        for(ServicoOs servico: os.getServicos())
        {
            double total = servico.getValor()-servico.getDesconto();
            
            DefaultTableModel modelo = (DefaultTableModel) tabelaServicos.getModel();
			modelo.addRow(new String[]	{
											String.valueOf(servico.getServico().getCodigo()),
                                            servico.getServico().getServico(),
                                            "R$ "+fmt.format(servico.getValor()),
                                            "R$ "+fmt.format(servico.getDesconto()),
                                            "R$ "+fmt.format(total)
										});
        }
        
        somaValores();
    }
    
    private void limpaTela()
    {
        SimpleDateFormat        sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        
        this.cliente    = null;
        this.os         = null;
        
        textoCodigo.setText("** NOVO **");
        alteraStatus();
        comboPagamento.setSelectedIndex(-1);
        this.pagamentoVisible(false, false); 
        
        textoCliente.setText("");
        textoTecnico.setText("");
        comboAtendimento.setSelectedIndex(-1);
        
        textoEquipamento.setText("");
        textoModelo.setText("");
        textoNumeroSerie.setText("");
        textoDefeito.setText("");
        
        textoPorcentagemDesconto.setText("0 %");
        
        textoObservacoes.setText("");
        
        ControladorTabelas.apagaTabela(tabelaPecas);
        ControladorTabelas.apagaTabela(tabelaServicos);
        
        somaValores();
    }
    
    private void imprimir(String relatorio)
    {
        try
        {
            ControladorRelatorios   relatorios = new ControladorRelatorios();
            HashMap                 parametros = new HashMap();
            parametros.put("Cod", os.getCodigo());
            relatorios.geraRelatorios(relatorio, parametros);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Erro ao imprimir!\nPor favor salve primeiro.", "Erro", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("img/error-circle.png"));
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdemDeServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdemDeServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdemDeServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdemDeServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdemDeServico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelCodigo;
    private javax.swing.JPanel PainelRecebimentos;
    private javax.swing.JButton botaoAdicionarCliente;
    private javax.swing.JButton botaoAdicionarPeca;
    private javax.swing.JButton botaoAdicionarServico;
    private javax.swing.JButton botaoAdicionarTecnico;
    private javax.swing.JButton botaoApagar;
    private javax.swing.JPanel botaoClienteAdicionar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoProcurar;
    private javax.swing.JButton botaoProcurarCliente;
    private javax.swing.JButton botaoProcurarTecnico;
    private javax.swing.JButton botaoRemoverPeca;
    private javax.swing.JButton botaoRemoverServico;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JComboBox comboAtendimento;
    private javax.swing.JComboBox<String> comboPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelPagamento;
    private javax.swing.JMenu menuImprimir;
    private javax.swing.JMenuItem menuImprimirAbertura;
    private javax.swing.JMenuItem menuImprimirFechamento;
    private javax.swing.JPanel painelObservacoes;
    private javax.swing.JPanel painelPeças;
    private javax.swing.JPanel painelServicos;
    private javax.swing.JTable tabelaPecas;
    private javax.swing.JTable tabelaServicos;
    private javax.swing.JTextField textoAbertura;
    private javax.swing.JTextField textoCliente;
    private javax.swing.JTextField textoCodigo;
    private javax.swing.JTextArea textoDefeito;
    private formattedFields.jTextMoeda textoDesconto;
    private javax.swing.JTextField textoEntrega;
    private javax.swing.JTextField textoEquipamento;
    private javax.swing.JTextField textoFechamento;
    private javax.swing.JTextField textoModelo;
    private javax.swing.JTextField textoNumeroSerie;
    private javax.swing.JTextArea textoObservacoes;
    private javax.swing.JFormattedTextField textoParcelas;
    private javax.swing.JFormattedTextField textoPorcentagemDesconto;
    private javax.swing.JTextField textoStatus;
    private javax.swing.JTextField textoTecnico;
    private formattedFields.jTextMoeda textoTotal;
    private formattedFields.jTextMoeda textoValorFinal;
    // End of variables declaration//GEN-END:variables
	private OrdemServico	os;
	private Clientes		cliente;
	private Usuario         tecnico;
}
